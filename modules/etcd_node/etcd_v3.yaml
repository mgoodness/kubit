#cloud-config
---

coreos:
  locksmith:
    endpoint: https://${FQDN}:2379
    etcd_cafile: /etc/etcd/ssl/ca.pem
    etcd_certfile: /etc/etcd/ssl/etcd.pem
    etcd_keyfile: /etc/etcd/ssl/etcd-key.pem
    group: etcd

  units:
    - name: etcd-member.service
      command: start
      drop_ins:
        - name: 20-prepare.conf
          content: |
            [Service]
            ExecStartPre=/opt/bin/get-assets.sh
            ExecStartPre=/usr/bin/chown -R etcd:etcd /var/lib/etcd
            ExecStartPre=-/usr/bin/rm -rf /var/lib/etcd/lost+found
            PermissionsStartOnly=true

        - name: 30-environment.conf
          content: |
            [Service]
            Environment="ETCD_ADVERTISE_CLIENT_URLS=https://${FQDN}:2379"
            Environment="ETCD_CERT_FILE=/etc/ssl/certs/etcd.pem"
            Environment="ETCD_CLIENT_CERT_AUTH=true"
            Environment="ETCD_DISCOVERY_SRV=${DOMAIN}"
            Environment="ETCD_INITIAL_ADVERTISE_PEER_URLS=https://${FQDN}:2380"
            Environment="ETCD_INITIAL_CLUSTER_STATE=new"
            Environment="ETCD_INITIAL_CLUSTER_TOKEN=${CLUSTER_NAME}"
            Environment="ETCD_KEY_FILE=/etc/ssl/certs/etcd-key.pem"
            Environment="ETCD_LISTEN_CLIENT_URLS=https://0.0.0.0:2379"
            Environment="ETCD_LISTEN_PEER_URLS=https://0.0.0.0:2380"
            Environment="ETCD_NAME=${NODE_NAME}"
            Environment="ETCD_PEER_CERT_FILE=/etc/ssl/certs/etcd.pem"
            Environment="ETCD_PEER_KEY_FILE=/etc/ssl/certs/etcd-key.pem"
            Environment="ETCD_PEER_CLIENT_CERT_AUTH=true"
            Environment="ETCD_PEER_TRUSTED_CA_FILE=/etc/ssl/certs/ca.pem"
            Environment="ETCD_SSL_DIR=/etc/etcd/ssl"
            Environment="ETCD_TRUSTED_CA_FILE=/etc/ssl/certs/ca.pem"
      enable: true

    - name: format-etcd-volume.service
      content: |
        [Unit]
        After=dev-xvdf.device
        Before=var-lib-etcd.mount
        Requires=dev-xvdf.device

        [Service]
        ExecStart=/opt/bin/ext4-format-volume-once.sh /dev/xvdf
        RemainAfterExit=yes
        Type=oneshot

        [Install]
        RequiredBy=var-lib-etcd.mount
      enable: true

    - name: var-lib-etcd.mount
      content: |
        [Unit]
        Before=etcd-member.service

        [Mount]
        Type=ext4
        What=/dev/xvdf
        Where=/var/lib/etcd

        [Install]
        RequiredBy=etcd-member.service
      enable: true

  update:
    group: ${UPDATE_GROUP}
    reboot_strategy: etcd-lock

write_files:
  - path: /etc/environment
    content: |
      COREOS_PRIVATE_IPV4=$private_ipv4
      COREOS_PUBLIC_IPV4=$public_ipv4
      ETCDCTL_CA_FILE=/etc/etcd/ssl/ca.pem
      ETCDCTL_CERT_FILE=/etc/etcd/ssl/etcd.pem
      ETCDCTL_ENDPOINT=https://${FQDN}:2379
      ETCDCTL_KEY_FILE=/etc/etcd/ssl/etcd-key.pem

  - path: /opt/bin/ext4-format-volume-once.sh
    content: |
      #!/bin/bash -e
      if [[ "$(wipefs -n -p $1 | grep ext4)" == "" ]];then
        mkfs.ext4 $1
      else
        echo "volume $1 is already formatted"
      fi
    permissions: 0700

  - path: /opt/bin/get-assets.sh
    content: |
      #!/bin/bash -e
      SSL_ASSETS=(ca.pem etcd.pem etcd-key.pem)

      curl -s -L \
        https://github.com/rlmcpherson/s3gof3r/releases/download/v0.5.0/gof3r_0.5.0_linux_amd64.tar.gz | \
      tar -xz --strip-components=1 -C /opt/bin --no-anchored gof3r

      mkdir -p /etc/etcd/ssl
      for asset in "$${SSL_ASSETS[@]}"; do
        /opt/bin/gof3r cp s3://${ASSETS_BUCKET_NAME}/pki/$${asset} /etc/etcd/ssl/$${asset}
      done
    permissions: 0700
